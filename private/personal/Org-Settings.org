* Introduction
I've decided to just store all of my org-mode settings in a single file within
the personal layer. As a matter of fact, I think all of my personal
configurations will go in here from now on, so that
- They will always be under version control
- I'll have be able to look and reassure myself of certain decisions I make
  regarding my configs, so writing them up in a literate style is good for me.
All that being said, I will now begin my descent into describing my org-mode
settings.
* Config
The file paths to my various org-files will go here. I use Claus Witt's settings
as a model, I'll probably expland upon or reduce this as time goes on, but here
are the six paths.

- /org-dir/ where all org files are stored.
- /gtd-inbox/ where newly created tasks go after an org capture
- /inbox-txt/ a hold over from Claus, this is where the txt version of my inbox
  is stored.
- /gtd/ this is the gtd directory where my main task and update files go
- /journal/ where I write down ideas and thoughts. I don't do much here because
  I write physical morning pages, so this may or may not get used.
- /notes/ snippets and notes
- /groceries/ where I store grocery lists, though I usually let Kat do it.

** Folders  
#+begin_src emacs-lisp :tangle "~/.emacs.d/private/personal/funcs.el" :noweb
  (defun open-org-dir ()
    "Opens the org dir"
    (interactive)
    (find-file "~/Dropbox/org/")
    )
  (defun gtd-inbox ()
    "Open the gtd inbox"
    (interactive)
    (find-file "~/Dropbox/org/inbox.org")
    )
  (defun gtd-inbox-txt ()
    "Open the gtd inbox"
    (interactive)
    (find-file "~/Dropbox/org/inbox.org.txt")
    )
  (defun gtd ()
    "Open GTD directory"
    (interactive)
    (find-file "~/Dropbox/org/gtd/main.org")
    )
  (defun journal ()
    "Open Journal"
    (interactive)
    (find-file "~/Dropbox/org/journal.org")
    )
  (defun notes ()
    "Switch to my work dir."
    (interactive)
    (find-file "~/Dropbox/org/notes/")
    )
  (defun groceries ()
    "Edit grocery list"
    (interactive)
    (find-file "~/Dropbox/org/groceries.org")
    )

  (defun my-org-archive-done-tasks ()
    (interactive)
    (org-map-entries 'org-archive-subtree "/DONE" 'file)
    )
#+end_src

 Now to point the org files to the proper directory.
#+begin_src emacs-lisp :tangle "~/.emacs.d/private/personal/config.el" :noweb
(setq org-directory "~/Dropbox/org/")
#+end_src
Were also going to go ahead and define our capture templates here. I only have
them for Inbox, Groceries, and Journal entries. Will add more later.

#+begin_src emacs-lisp :tangle "~/.emacs.d/private/personal/config.el" :noweb
  (setq org-capture-templates
        '(("i" "Inbox" entry (file "~/Dropbox/org/inbox.org")
           "** TODO %?\n %i\n %a")
          ("t" "Todo" entry (file+headline "~/Dropbox/org/gtd/private.org" "Tasks")
           "* TODO %?\n %i\n %a")
          ("g" "Groceries" entry (file+headline "~/Dropbox/org/groceries.org" "INBOX")
           "* %?\n %i\n %a")
          ("j" "Journal Entry" entry (file+datetree "~/Dropbox/org/journal.org")
           "* %?\nEntered on %U\n %i\n %a")
          )
        )
#+end_src
** DONE org-setup
CLOSED: [2015-06-15 Mon 22:01]
- State "DONE"       from "TODO"       [2015-06-15 Mon 22:01]
#+begin_src emacs-lisp :tangle "~/.emacs.d/private/personal/config.el" :noweb
  ;; Org settings
  (setq fill-column 64)
  (setq visual-line-mode nil)
  (setq org-directory "~/Dropbox/org/")
  (setq org-agenda-files '("~/Dropbox/org/"
                           "~/Dropbox/org/gtd"
                           "~/Dropbox/org/notes"
                           "~/Dropbox/org/.org-jira"
                           "~/Dropbox/org/writing/project1"
                           ))
  ;; The habit package for org is awesome!
  ;; Ifttt auto appends .txt to filenames for dropbox append to file action
  (add-to-list 'auto-mode-alist '("\\Dropbox/org/.*\.txt\\'" . org-mode))

#+end_src
** DONE org-agenda keywords 
CLOSED: [2015-06-15 Mon 20:37]
- State "DONE"       from "TODO"       [2015-06-15 Mon 20:37]
I use two models for keywords here. The first is Tony Ballantyne's writing
sequences, the second one is a set of sequences that will be used generally in
org-mode. Its best to collect all of the todo stuff together, for convenience,
and because you can only do one setq.
And lets set some refile targets.
#+begin_src emacs-lisp :tangle "~/.emacs.d/private/personal/config.el" :noweb
  ;; Quick searches in org mode
  ; Targets include this file and any file contributing to the agenda - up to 9 levels deep
  (setq org-refile-targets (quote ((nil :maxlevel . 9)
                                   (org-agenda-files :maxlevel . 9))))
  ; Use full outline paths for refile targets - we file directly with IDO
  (setq org-refile-use-outline-path t)

  ; Targets complete directly with IDO
  (setq org-outline-path-complete-in-steps nil)

  ; Allow refile to create parent tasks with confirmation
  (setq org-refile-allow-creating-parent-nodes (quote confirm))
#+end_src

Exclude DONE state tasks from refile targets
#+begin_src emacs-lisp :tangle "~/.emacs.d/private/personal/funcs.el" :noweb
  (setq org-indirect-buffer-display 'current-window)
  (defun bh/verify-refile-target ()
    "Exclude todo keywords with a done state from refile targets"
    (not (member (nth 2 (org-heading-components)) org-done-keywords)))
  (setq org-refile-target-verify-function 'bh/verify-refile-target)
#+end_src
** org-agenda settings
This is perhaps the meat of my org file, dealing with agenda settings. First we
need to tell org-mode where to find my org-agenda-files. We're also going to
make it a list so that we can add more directories as time goes on. I'm working
on a novel, so this is ideal because even though I would love to put everything
in my dropbox, I'd prefer to keep my writing files under another form of source
control, particularly so I can revert to a previous version if something goes
horribly wrong. Its overkill, yes, but worth it.

Evil-leader keybindings
#+begin_src emacs-lisp :tangle "~/.emacs.d/private/personal/keybindings.el" :noweb
  ;; Org-mode keybindings
  (evil-leader/set-key "oo" 'open-org-dir)
  (evil-leader/set-key "oa" 'org-agenda)
  (evil-leader/set-key "oA" 'my-org-archive-done-tasks)
  (evil-leader/set-key "og" 'gtd)
  (evil-leader/set-key "oJ" 'journal)
  (evil-leader/set-key "ot" 'org-capture)
  (evil-leader/set-key "on" 'notes)
  (evil-leader/set-key "oG" 'groceries)
  (evil-leader/set-key "oi" 'gtd-inbox)
  (evil-leader/set-key "oI" 'gtd-inbox-txt)
  (evil-leader/set-key "oU" 'org-mobile-push)
  (evil-leader/set-key "oD" 'org-mobile-pull)
  (evil-leader/set-key "oek" 'edit-personal-keybindings)
  (evil-leader/set-key "oef" 'edit-personal-funcs)
  (evil-leader/set-key "of" 'ff-find-other-file)
  (evil-leader/set-key "*y" 'clipboard-kill-region)
  (evil-leader/set-key "*p" 'clipboard-yank)

#+end_src
Mode defaults for agenda
** TODO org-tags

